--<%= getCommentPrefixing(`rpc ${name}(`) %>
  public <%= _.lowerFirst(name) %>(options?: grpc.CallOptions): Promise<IDuplexStream<<%= requestTsType %>, <%= responseTsType %>>> {
    return this.client.withConnection('<%= service %>', ({ resource, client, metadata }) => {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const resolved = resolveCallOptions(options, this.client.callOptionsFactory, {
          service: '<%= service %>',
          method: '<%= _.lowerFirst(name) %>',
          isStream: true,
        });

        const stream = (<any> client).<%= _.lowerFirst(name) %>(metadata, resolved);
        stream.on('error', (err: Error) => stream.writable && this.client.markFailed(resource, err));
        return stream;
      });
  }
